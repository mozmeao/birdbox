# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.

# Generated by Django 4.2.5 on 2023-10-13 12:38

from django.db import migrations

import wagtail.blocks
import wagtail.embeds.blocks
import wagtail.fields
import wagtail.images.blocks
import wagtailmarkdown.blocks


class Migration(migrations.Migration):
    dependencies = [
        ("microsite", "0095_blogindexpage_show_breadcrumbs_and_more"),
    ]

    operations = [
        migrations.AlterField(
            model_name="blogpage",
            name="body",
            field=wagtail.fields.StreamField(
                [
                    (
                        "blogtext",
                        wagtail.blocks.RichTextBlock(
                            features=["h2", "h3", "bold", "italic", "strikethrough", "code", "blockquote", "link", "ol", "ul"],
                            label="Rich text",
                            required=False,
                        ),
                    ),
                    ("markdown", wagtailmarkdown.blocks.MarkdownBlock(label="Markdown", required=False)),
                    (
                        "image",
                        wagtail.blocks.StructBlock(
                            [
                                ("image", wagtail.images.blocks.ImageChooserBlock(required=False)),
                                ("alt_text", wagtail.blocks.CharBlock(label="Alt-text for this image", max_length=250, required=False)),
                                (
                                    "decorative_only",
                                    wagtail.blocks.BooleanBlock(default=False, label="Is this image decorative only?", required=False),
                                ),
                                ("image_caption", wagtail.blocks.CharBlock(max_length=250, required=False)),
                                ("image_credit", wagtail.blocks.CharBlock(max_length=250, required=False)),
                            ],
                            label="Mid-body image",
                            required=False,
                        ),
                    ),
                    (
                        "video",
                        wagtail.blocks.StructBlock(
                            [("video", wagtail.embeds.blocks.EmbedBlock(required=True))], label="Mid-body video", required=False
                        ),
                    ),
                ],
                use_json_field=True,
            ),
        ),
        migrations.AlterField(
            model_name="longformarticlepage",
            name="content",
            field=wagtail.fields.StreamField(
                [
                    (
                        "text",
                        wagtail.blocks.RichTextBlock(
                            features=["h2", "h3", "bold", "italic", "strikethrough", "code", "blockquote", "link", "ol", "ul"], required=False
                        ),
                    ),
                    ("markdown", wagtailmarkdown.blocks.MarkdownBlock(label="Markdown block", required=False)),
                    (
                        "image",
                        wagtail.blocks.StructBlock(
                            [
                                ("image", wagtail.images.blocks.ImageChooserBlock(required=False)),
                                ("alt_text", wagtail.blocks.CharBlock(label="Alt-text for this image", max_length=250, required=False)),
                                (
                                    "decorative_only",
                                    wagtail.blocks.BooleanBlock(default=False, label="Is this image decorative only?", required=False),
                                ),
                                ("image_caption", wagtail.blocks.CharBlock(max_length=250, required=False)),
                                ("image_credit", wagtail.blocks.CharBlock(max_length=250, required=False)),
                            ],
                            label_format="Captioned image: {image_caption}",
                            required=False,
                        ),
                    ),
                    (
                        "callout",
                        wagtail.blocks.StructBlock(
                            [
                                ("headline", wagtail.blocks.CharBlock(help_text="Around 50 chars ideally. Max 100", max_length=100, required=True)),
                                ("body", wagtail.blocks.TextBlock(help_text="Around 150 chars ideally. Max 300", max_length=300, required=True)),
                                (
                                    "cta",
                                    wagtail.blocks.StructBlock(
                                        [
                                            ("page", wagtail.blocks.PageChooserBlock(label="Page", required=False)),
                                            ("external_url", wagtail.blocks.URLBlock(label="External URL", required=False)),
                                            (
                                                "rel",
                                                wagtail.blocks.CharBlock(
                                                    help_text="Optional 'rel' attribute. If blank, no attribute will be set",
                                                    max_length=100,
                                                    required=False,
                                                ),
                                            ),
                                            ("button_text", wagtail.blocks.CharBlock(max_length=50, required=False)),
                                        ],
                                        required=True,
                                    ),
                                ),
                                ("theme", wagtail.blocks.ChoiceBlock(choices=[("mzp-t-light", "Light theme"), ("mzp-t-dark", "Dark theme")])),
                            ],
                            help_text="<a href='https://protocol.mozilla.org/components/detail/compact-call-out--default.html'>Protocol docs for compact-callout</a>.",
                            label_format="Compact callout: {headline}",
                            required=False,
                        ),
                    ),
                ],
                blank=True,
                use_json_field=True,
            ),
        ),
    ]
